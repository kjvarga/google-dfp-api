#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.0 on 2011-08-03 17:27:41.

module DfpApi; module V201107; module CompanyService
  class CompanyServiceRegistry
    COMPANYSERVICE_METHODS = {:update_company=>{:input=>[{:type=>"Company", :max_occurs=>1, :name=>:company, :min_occurs=>0}], :output=>{:fields=>[{:type=>"Company", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"update_company_response"}}, :create_companies=>{:input=>[{:type=>"Company", :max_occurs=>:unbounded, :name=>:companies, :min_occurs=>0}], :output=>{:fields=>[{:type=>"Company", :max_occurs=>:unbounded, :name=>:rval, :min_occurs=>0}], :name=>"create_companies_response"}}, :create_company=>{:input=>[{:type=>"Company", :max_occurs=>1, :name=>:company, :min_occurs=>0}], :output=>{:fields=>[{:type=>"Company", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"create_company_response"}}, :get_companies_by_statement=>{:input=>[{:type=>"Statement", :max_occurs=>1, :name=>:filter_statement, :min_occurs=>0}], :output=>{:fields=>[{:type=>"CompanyPage", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"get_companies_by_statement_response"}}, :get_company=>{:input=>[{:type=>"long", :max_occurs=>1, :name=>:company_id, :min_occurs=>0}], :output=>{:fields=>[{:type=>"Company", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"get_company_response"}}, :update_companies=>{:input=>[{:type=>"Company", :max_occurs=>:unbounded, :name=>:companies, :min_occurs=>0}], :output=>{:fields=>[{:type=>"Company", :max_occurs=>:unbounded, :name=>:rval, :min_occurs=>0}], :name=>"update_companies_response"}}}
    COMPANYSERVICE_TYPES = {:CompanyPage=>{:fields=>[{:type=>"int", :max_occurs=>1, :name=>:total_result_set_size, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:start_index, :min_occurs=>0}, {:type=>"Company", :max_occurs=>:unbounded, :name=>:results, :min_occurs=>0}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:request_id, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:response_time, :min_occurs=>0}]}, :Statement=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:query, :min_occurs=>0}, {:type=>"String_ValueMapEntry", :max_occurs=>:unbounded, :name=>:values, :min_occurs=>0}]}, :String_ValueMapEntry=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:key, :min_occurs=>0}, {:type=>"Value", :max_occurs=>1, :name=>:value, :min_occurs=>0}]}, :NumberValue=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:value, :min_occurs=>0}], :base=>"Value"}, :Authentication=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:authentication_type, :min_occurs=>0}], :abstract=>true}, :AppliedLabel=>{:fields=>[{:type=>"long", :max_occurs=>1, :name=>:label_id, :min_occurs=>0}, {:type=>"boolean", :max_occurs=>1, :name=>:is_negated, :min_occurs=>0}]}, :OAuth=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:parameters, :min_occurs=>0}], :base=>"Authentication"}, :BooleanValue=>{:fields=>[{:type=>"boolean", :max_occurs=>1, :name=>:value, :min_occurs=>0}], :base=>"Value"}, :Value=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:value_type, :min_occurs=>0}], :abstract=>true}, :SoapRequestHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:network_code, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:application_name, :min_occurs=>0}, {:type=>"Authentication", :max_occurs=>1, :name=>:authentication, :min_occurs=>0}]}, :Company=>{:fields=>[{:type=>"long", :max_occurs=>1, :name=>:id, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:name, :min_occurs=>0}, {:type=>"Company.Type", :max_occurs=>1, :name=>:type, :min_occurs=>0}, {:type=>"AppliedLabel", :max_occurs=>:unbounded, :name=>:applied_labels, :min_occurs=>0}, {:type=>"boolean", :max_occurs=>1, :name=>:enable_same_advertiser_competitive_exclusion, :min_occurs=>0}]}, :ClientLogin=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:token, :min_occurs=>0}], :base=>"Authentication"}, :TextValue=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:value, :min_occurs=>0}], :base=>"Value"}}
    COMPANYSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return COMPANYSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return COMPANYSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return COMPANYSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < DfpApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
