#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.0 on 2011-08-03 17:27:44.

module DfpApi; module V201107; module ReportService
  class ReportServiceRegistry
    REPORTSERVICE_METHODS = {:get_report_download_url=>{:original_name=>"getReportDownloadURL", :input=>[{:type=>"long", :max_occurs=>1, :name=>:report_job_id, :min_occurs=>0}, {:type=>"ExportFormat", :max_occurs=>1, :name=>:export_format, :min_occurs=>0}], :output=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"get_report_download_url_response"}}, :get_report_job=>{:input=>[{:type=>"long", :max_occurs=>1, :name=>:report_job_id, :min_occurs=>0}], :output=>{:fields=>[{:type=>"ReportJob", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"get_report_job_response"}}, :run_report_job=>{:input=>[{:type=>"ReportJob", :max_occurs=>1, :name=>:report_job, :min_occurs=>0}], :output=>{:fields=>[{:type=>"ReportJob", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"run_report_job_response"}}}
    REPORTSERVICE_TYPES = {:SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:request_id, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:response_time, :min_occurs=>0}]}, :Authentication=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:authentication_type, :min_occurs=>0}], :abstract=>true}, :OAuth=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:parameters, :min_occurs=>0}], :base=>"Authentication"}, :Date=>{:fields=>[{:type=>"int", :max_occurs=>1, :name=>:year, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:month, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:day, :min_occurs=>0}]}, :ReportQuery=>{:fields=>[{:type=>"Dimension", :max_occurs=>:unbounded, :name=>:dimensions, :min_occurs=>0}, {:type=>"Column", :max_occurs=>:unbounded, :name=>:columns, :min_occurs=>0}, {:type=>"Date", :max_occurs=>1, :name=>:start_date, :min_occurs=>0}, {:type=>"Date", :max_occurs=>1, :name=>:end_date, :min_occurs=>0}, {:type=>"DateRangeType", :max_occurs=>1, :name=>:date_range_type, :min_occurs=>0}, {:type=>"DimensionFilter", :max_occurs=>:unbounded, :name=>:dimension_filters, :min_occurs=>0}]}, :SoapRequestHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:network_code, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:application_name, :min_occurs=>0}, {:type=>"Authentication", :max_occurs=>1, :name=>:authentication, :min_occurs=>0}]}, :ClientLogin=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:token, :min_occurs=>0}], :base=>"Authentication"}, :ReportJob=>{:fields=>[{:type=>"long", :max_occurs=>1, :name=>:id, :min_occurs=>0}, {:type=>"ReportQuery", :max_occurs=>1, :name=>:report_query, :min_occurs=>0}, {:type=>"ReportJobStatus", :max_occurs=>1, :name=>:report_job_status, :min_occurs=>0}]}}
    REPORTSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return REPORTSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return REPORTSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return REPORTSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < DfpApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
