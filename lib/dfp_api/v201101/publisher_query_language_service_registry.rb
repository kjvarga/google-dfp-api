#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.3.0 on 2011-06-09 13:32:42.

module DfpApi; module V201101; module PublisherQueryLanguageService
  class PublisherQueryLanguageServiceRegistry
    PUBLISHERQUERYLANGUAGESERVICE_METHODS = {:select=>{:output=>{:fields=>[{:type=>"ResultSet", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"select_response"}, :input=>[{:type=>"Statement", :min_occurs=>0, :name=>:select_statement, :max_occurs=>1}]}}
    PUBLISHERQUERYLANGUAGESERVICE_TYPES = {:SoapRequestHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:auth_token, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:network_code, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:application_name, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:o_auth_token, :max_occurs=>1}]}, :ColumnType=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:label_name, :max_occurs=>1}]}, :BooleanValue=>{:base=>"Value", :fields=>[{:type=>"boolean", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :TextValue=>{:base=>"Value", :fields=>[{:type=>"string", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :Row=>{:fields=>[{:type=>"Value", :min_occurs=>0, :name=>:values, :max_occurs=>nil}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:request_id, :max_occurs=>1}, {:type=>"long", :min_occurs=>0, :name=>:response_time, :max_occurs=>1}]}, :Value=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:value_type, :max_occurs=>1}], :abstract=>true}, :Statement=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:query, :max_occurs=>1}, {:type=>"String_ValueMapEntry", :min_occurs=>0, :name=>:values, :max_occurs=>nil}]}, :ResultSet=>{:fields=>[{:type=>"ColumnType", :min_occurs=>0, :name=>:column_types, :max_occurs=>nil}, {:type=>"Row", :min_occurs=>0, :name=>:rows, :max_occurs=>nil}]}, :String_ValueMapEntry=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:key, :max_occurs=>1}, {:type=>"Value", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :NumberValue=>{:base=>"Value", :fields=>[{:type=>"string", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}}

    def self.get_method_signature(method_name)
      return PUBLISHERQUERYLANGUAGESERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return PUBLISHERQUERYLANGUAGESERVICE_TYPES[type_name.to_sym]
    end
  end

  # Base class for exceptions.
  class ApplicationException < DfpApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields = [] if !defined?(@array_fields)
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
