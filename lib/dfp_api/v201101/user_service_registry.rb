#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.0 on 2011-08-02 15:32:34.

module DfpApi; module V201101; module UserService
  class UserServiceRegistry
    USERSERVICE_METHODS = {:create_users=>{:input=>[{:type=>"User", :min_occurs=>0, :name=>:users, :max_occurs=>:unbounded}], :output=>{:fields=>[{:type=>"User", :min_occurs=>0, :name=>:rval, :max_occurs=>:unbounded}], :name=>"create_users_response"}}, :update_users=>{:input=>[{:type=>"User", :min_occurs=>0, :name=>:users, :max_occurs=>:unbounded}], :output=>{:fields=>[{:type=>"User", :min_occurs=>0, :name=>:rval, :max_occurs=>:unbounded}], :name=>"update_users_response"}}, :get_all_roles=>{:input=>[], :output=>{:fields=>[{:type=>"Role", :min_occurs=>0, :name=>:rval, :max_occurs=>:unbounded}], :name=>"get_all_roles_response"}}, :get_user=>{:input=>[{:type=>"long", :min_occurs=>0, :name=>:user_id, :max_occurs=>1}], :output=>{:fields=>[{:type=>"User", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"get_user_response"}}, :get_users_by_statement=>{:input=>[{:type=>"Statement", :min_occurs=>0, :name=>:filter_statement, :max_occurs=>1}], :output=>{:fields=>[{:type=>"UserPage", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"get_users_by_statement_response"}}, :perform_user_action=>{:input=>[{:type=>"UserAction", :min_occurs=>0, :name=>:user_action, :max_occurs=>1}, {:type=>"Statement", :min_occurs=>0, :name=>:filter_statement, :max_occurs=>1}], :output=>{:fields=>[{:type=>"UpdateResult", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"perform_user_action_response"}}, :create_user=>{:input=>[{:type=>"User", :min_occurs=>0, :name=>:user, :max_occurs=>1}], :output=>{:fields=>[{:type=>"User", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"create_user_response"}}, :update_user=>{:input=>[{:type=>"User", :min_occurs=>0, :name=>:user, :max_occurs=>1}], :output=>{:fields=>[{:type=>"User", :min_occurs=>0, :name=>:rval, :max_occurs=>1}], :name=>"update_user_response"}}}
    USERSERVICE_TYPES = {:Statement=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:query, :max_occurs=>1}, {:type=>"String_ValueMapEntry", :min_occurs=>0, :name=>:values, :max_occurs=>:unbounded}]}, :UserRecord=>{:fields=>[{:type=>"long", :min_occurs=>0, :name=>:id, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:name, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:email, :max_occurs=>1}, {:type=>"long", :min_occurs=>0, :name=>:role_id, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:role_name, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:preferred_locale, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:user_record_type, :max_occurs=>1}]}, :UpdateResult=>{:fields=>[{:type=>"int", :min_occurs=>0, :name=>:num_changes, :max_occurs=>1}]}, :ActivateUsers=>{:base=>"UserAction", :fields=>[]}, :UserPage=>{:fields=>[{:type=>"int", :min_occurs=>0, :name=>:total_result_set_size, :max_occurs=>1}, {:type=>"int", :min_occurs=>0, :name=>:start_index, :max_occurs=>1}, {:type=>"User", :min_occurs=>0, :name=>:results, :max_occurs=>:unbounded}]}, :String_ValueMapEntry=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:key, :max_occurs=>1}, {:type=>"Value", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :NumberValue=>{:base=>"Value", :fields=>[{:type=>"string", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :DeactivateUsers=>{:base=>"UserAction", :fields=>[]}, :Value=>{:abstract=>true, :fields=>[{:type=>"string", :min_occurs=>0, :name=>:value_type, :max_occurs=>1}]}, :Role=>{:fields=>[{:type=>"long", :min_occurs=>0, :name=>:id, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:name, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:description, :max_occurs=>1}]}, :SoapRequestHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:auth_token, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:network_code, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:application_name, :max_occurs=>1}, {:type=>"string", :min_occurs=>0, :name=>:o_auth_token, :max_occurs=>1}]}, :UserAction=>{:abstract=>true, :fields=>[{:type=>"string", :min_occurs=>0, :name=>:user_action_type, :max_occurs=>1}]}, :BooleanValue=>{:base=>"Value", :fields=>[{:type=>"boolean", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :TextValue=>{:base=>"Value", :fields=>[{:type=>"string", :min_occurs=>0, :name=>:value, :max_occurs=>1}]}, :User=>{:base=>"UserRecord", :fields=>[{:type=>"boolean", :min_occurs=>0, :name=>:is_active, :max_occurs=>1}, {:type=>"boolean", :min_occurs=>0, :name=>:is_email_notification_allowed, :max_occurs=>1}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :name=>:request_id, :max_occurs=>1}, {:type=>"long", :min_occurs=>0, :name=>:response_time, :max_occurs=>1}]}}
    USERSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return USERSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return USERSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return USERSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < DfpApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
